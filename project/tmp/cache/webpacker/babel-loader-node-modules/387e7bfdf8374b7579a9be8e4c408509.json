{"ast":null,"code":"import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js'; // An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result â€” either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\n\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}","map":null,"metadata":{},"sourceType":"module"}