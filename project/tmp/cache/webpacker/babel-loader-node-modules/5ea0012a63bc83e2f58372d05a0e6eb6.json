{"ast":null,"code":"import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport isArray from './isArray.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js'; // Invoke a method (with arguments) on every item in a collection.\n\nexport default restArguments(function (obj, path, args) {\n  var contextPath, func;\n\n  if (isFunction(path)) {\n    func = path;\n  } else if (isArray(path)) {\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n\n  return map(obj, function (context) {\n    var method = func;\n\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n\n      if (context == null) return void 0;\n      method = context[path];\n    }\n\n    return method == null ? method : method.apply(context, args);\n  });\n});","map":null,"metadata":{},"sourceType":"module"}