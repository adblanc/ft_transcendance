{"ast":null,"code":"import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js'; // Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n\nvar partial = restArguments(function (func, boundArgs) {\n  var placeholder = partial.placeholder;\n\n  var bound = function bound() {\n    var position = 0,\n        length = boundArgs.length;\n    var args = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n\n    while (position < arguments.length) {\n      args.push(arguments[position++]);\n    }\n\n    return executeBound(func, bound, this, this, args);\n  };\n\n  return bound;\n});\npartial.placeholder = _;\nexport default partial;","map":null,"metadata":{},"sourceType":"module"}