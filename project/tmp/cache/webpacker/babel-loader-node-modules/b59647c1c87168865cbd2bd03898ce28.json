{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\nvar isFunction = tagTester('Function'); // Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n\nvar nodelist = root.document && root.document.childNodes;\n\nif (typeof /./ != 'function' && (typeof Int8Array === \"undefined\" ? \"undefined\" : _typeof(Int8Array)) != 'object' && typeof nodelist != 'function') {\n  isFunction = function isFunction(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;","map":null,"metadata":{},"sourceType":"module"}